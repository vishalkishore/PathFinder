FROM ubuntu:20.04 AS builder
ENV DEBIAN_FRONTEND=noninteractive

# Install build dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    git \
    python3-pip \
    ninja-build \
    pkg-config \
    curl \
    libssl-dev \  # Added libssl-dev in builder stage \
    && rm -rf /var/lib/apt/lists/*

# Install meson
RUN pip3 install meson

# Install Pistache with specific version for stability
RUN git clone https://github.com/pistacheio/pistache.git \
    && cd pistache \
    && git checkout v0.0.5 \  # Added version pinning \
    && git submodule update --init --recursive \
    && meson setup build --prefix=/usr/local \
    && meson install -C build

WORKDIR /app

# Copy only necessary files for building
COPY CMakeLists.txt .
COPY src/ src/

# Build the application
RUN mkdir -p build && cd build \
    && cmake -DCMAKE_BUILD_TYPE=Release .. \
    && make -j$(nproc)

# Create final minimal image
FROM ubuntu:20.04

# Install necessary runtime dependencies
RUN apt-get update && apt-get install -y \
    libssl-dev \
    curl \  # Added for healthcheck \
    && rm -rf /var/lib/apt/lists/*

# Copy the compiled application and Pistache from the builder stage
COPY --from=builder /usr/local/lib/libpistache.so* /usr/local/lib/
COPY --from=builder /app/build/spt_server /app/server  
# Fixed binary name based on CMakeLists.txt

WORKDIR /app

# Update library cache
RUN ldconfig

# Create non-root user for security
RUN useradd -r -s /bin/false appuser && \
    chown -R appuser:appuser /app

# Remove duplicate EXPOSE
EXPOSE 9080

USER appuser

HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:9080/api/health || exit 1

CMD ["./server"]